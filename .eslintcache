[{"C:\\Users\\disof\\scheduleit\\src\\index.js":"1","C:\\Users\\disof\\scheduleit\\src\\App.jsx":"2","C:\\Users\\disof\\scheduleit\\src\\constants\\constants.js":"3","C:\\Users\\disof\\scheduleit\\src\\pages\\SelectAvailability\\index.js":"4","C:\\Users\\disof\\scheduleit\\src\\pages\\SelectAvailability\\SelectAvailability.jsx":"5","C:\\Users\\disof\\scheduleit\\src\\pages\\SelectAvailability\\requests.js":"6","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Spinner\\index.js":"7","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Spinner\\Spinner.jsx":"8","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\index.js":"9","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\CreateRoom.jsx":"10","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Button\\index.js":"11","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Button\\Button.jsx":"12","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Select\\index.js":"13","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Select\\Select.jsx":"14","C:\\Users\\disof\\scheduleit\\src\\ui-components\\TextArea\\TextArea.jsx":"15","C:\\Users\\disof\\scheduleit\\src\\utils\\hooks\\useObjectState.js":"16","C:\\Users\\disof\\scheduleit\\src\\utils\\hooks\\useForm.js":"17","C:\\Users\\disof\\scheduleit\\src\\ui-components\\TextArea\\index.js":"18","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Message\\index.js":"19","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Message\\Message.jsx":"20","C:\\Users\\disof\\scheduleit\\src\\ui-components\\index.js":"21","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\requests.js":"22","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\utils\\constants.js":"23","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\utils\\functions.js":"24","C:\\Users\\disof\\scheduleit\\src\\ui-components\\ButtonWithStatus\\index.js":"25","C:\\Users\\disof\\scheduleit\\src\\ui-components\\ButtonWithStatus\\ButtonWithStatus.jsx":"26","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Loader\\index.js":"27","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Loader\\Loader.jsx":"28","C:\\Users\\disof\\scheduleit\\src\\pages\\RoomAdminDashboard\\index.js":"29","C:\\Users\\disof\\scheduleit\\src\\pages\\RoomAdminDashboard\\RoomAdminDashboard.jsx":"30","C:\\Users\\disof\\scheduleit\\src\\ui-components\\CollapsibleCard\\index.js":"31","C:\\Users\\disof\\scheduleit\\src\\ui-components\\CollapsibleCard\\CollapsibleCard.jsx":"32","C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\index.js":"33","C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\MultipleTextInput.jsx":"34","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Input\\index.js":"35","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Input\\Input.jsx":"36","C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\utils\\functions.js":"37","C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\components\\UserList\\UserList.jsx":"38","C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\components\\CreateNewUser\\index.js":"39","C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\components\\CreateNewUser\\CreateNewUser.jsx":"40","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Label\\index.js":"41","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Label\\Label.jsx":"42","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Redirects\\index.js":"43","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Redirects\\Redirects.jsx":"44","C:\\Users\\disof\\scheduleit\\src\\pages\\RoomAdminDashboard\\requests.js":"45","C:\\Users\\disof\\scheduleit\\src\\ui-components\\CollapsibleCard\\utils\\context\\collapsedContext.js":"46","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\index.js":"47","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\ParticipantDashboard.jsx":"48","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\utils\\constants.js":"49","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\utils\\functions.js":"50","C:\\Users\\disof\\scheduleit\\src\\ui-components\\HorizontalPager\\index.js":"51","C:\\Users\\disof\\scheduleit\\src\\ui-components\\HorizontalPager\\HorizontalPager.jsx":"52","C:\\Users\\disof\\scheduleit\\src\\utils\\constructors\\constructTime.js":"53","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\CompactEventTimePicker\\index.js":"54","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\CompactEventTimePicker\\CompactEventTimePicker.jsx":"55","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Grid\\index.js":"56","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Grid\\Grid.jsx":"57","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\TimePicker\\index.js":"58","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\TimePicker\\TimePicker.jsx":"59","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\TimePicker\\TimeTick.jsx":"60","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\utils\\hooks.js":"61","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\shared\\shared.js":"62","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\EventTimePicker\\index.js":"63","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\EventTimePicker\\EventTimePicker.jsx":"64","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\EventTimePicker\\EventTimeTick.jsx":"65","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Checkbox\\index.js":"66","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Checkbox\\Checkbox.jsx":"67","C:\\Users\\disof\\scheduleit\\src\\ui-components\\CheckboxGroup\\index.js":"68","C:\\Users\\disof\\scheduleit\\src\\ui-components\\CheckboxGroup\\CheckboxGroup.jsx":"69","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\Date.jsx":"70","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\index.js":"71","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\DatePicker.jsx":"72","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\functions.js":"73","C:\\Users\\disof\\scheduleit\\src\\utils\\functions.js":"74","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\PagedForm\\index.js":"75","C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\PagedForm\\PagedForm.jsx":"76","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\requests.js":"77","C:\\Users\\disof\\scheduleit\\src\\pages\\Login\\index.js":"78","C:\\Users\\disof\\scheduleit\\src\\pages\\Login\\Login.jsx":"79","C:\\Users\\disof\\scheduleit\\src\\pages\\Login\\requests.js":"80","C:\\Users\\disof\\scheduleit\\src\\pages\\LoginAndDashboardEntry\\index.js":"81","C:\\Users\\disof\\scheduleit\\src\\pages\\LoginAndDashboardEntry\\LoginAndDashboardEntry.jsx":"82","C:\\Users\\disof\\scheduleit\\src\\pages\\LoginAndDashboardEntry\\requests.js":"83"},{"size":308,"mtime":1626991498535,"results":"84","hashOfConfig":"85"},{"size":430,"mtime":1666067916060,"results":"86","hashOfConfig":"85"},{"size":14572,"mtime":1666481435313,"results":"87","hashOfConfig":"85"},{"size":92,"mtime":1623106969349,"results":"88","hashOfConfig":"85"},{"size":1560,"mtime":1627080208560,"results":"89","hashOfConfig":"85"},{"size":515,"mtime":1625284093283,"results":"90","hashOfConfig":"85"},{"size":59,"mtime":1621042950865,"results":"91","hashOfConfig":"85"},{"size":550,"mtime":1621223005726,"results":"92","hashOfConfig":"85"},{"size":68,"mtime":1622056913307,"results":"93","hashOfConfig":"85"},{"size":4422,"mtime":1666479672384,"results":"94","hashOfConfig":"85"},{"size":56,"mtime":1622138606390,"results":"95","hashOfConfig":"85"},{"size":270,"mtime":1622138770900,"results":"96","hashOfConfig":"85"},{"size":56,"mtime":1622142242063,"results":"97","hashOfConfig":"85"},{"size":730,"mtime":1666067916125,"results":"98","hashOfConfig":"85"},{"size":464,"mtime":1624995469738,"results":"99","hashOfConfig":"85"},{"size":302,"mtime":1622482351856,"results":"100","hashOfConfig":"85"},{"size":1095,"mtime":1625005006713,"results":"101","hashOfConfig":"85"},{"size":62,"mtime":1622153586351,"results":"102","hashOfConfig":"85"},{"size":59,"mtime":1622140754793,"results":"103","hashOfConfig":"85"},{"size":426,"mtime":1666067916125,"results":"104","hashOfConfig":"85"},{"size":784,"mtime":1666067916141,"results":"105","hashOfConfig":"85"},{"size":251,"mtime":1666479728404,"results":"106","hashOfConfig":"85"},{"size":744,"mtime":1623279355332,"results":"107","hashOfConfig":"85"},{"size":601,"mtime":1625643044284,"results":"108","hashOfConfig":"85"},{"size":86,"mtime":1622757133783,"results":"109","hashOfConfig":"85"},{"size":1488,"mtime":1666067916110,"results":"110","hashOfConfig":"85"},{"size":56,"mtime":1623104551650,"results":"111","hashOfConfig":"85"},{"size":739,"mtime":1623106218773,"results":"112","hashOfConfig":"85"},{"size":92,"mtime":1623175815803,"results":"113","hashOfConfig":"85"},{"size":1355,"mtime":1627078962191,"results":"114","hashOfConfig":"85"},{"size":83,"mtime":1623186923217,"results":"115","hashOfConfig":"85"},{"size":766,"mtime":1627077632520,"results":"116","hashOfConfig":"85"},{"size":89,"mtime":1623350205942,"results":"117","hashOfConfig":"85"},{"size":844,"mtime":1626991533126,"results":"118","hashOfConfig":"85"},{"size":53,"mtime":1623438627850,"results":"119","hashOfConfig":"85"},{"size":427,"mtime":1666067916125,"results":"120","hashOfConfig":"85"},{"size":271,"mtime":1623445395429,"results":"121","hashOfConfig":"85"},{"size":2566,"mtime":1625006010839,"results":"122","hashOfConfig":"85"},{"size":77,"mtime":1624045670266,"results":"123","hashOfConfig":"85"},{"size":1558,"mtime":1625168783317,"results":"124","hashOfConfig":"85"},{"size":53,"mtime":1624991462311,"results":"125","hashOfConfig":"85"},{"size":228,"mtime":1666067916125,"results":"126","hashOfConfig":"85"},{"size":65,"mtime":1625179507345,"results":"127","hashOfConfig":"85"},{"size":225,"mtime":1625179490345,"results":"128","hashOfConfig":"85"},{"size":173,"mtime":1625280950162,"results":"129","hashOfConfig":"85"},{"size":679,"mtime":1627059840499,"results":"130","hashOfConfig":"85"},{"size":96,"mtime":1666067916094,"results":"131","hashOfConfig":"85"},{"size":10799,"mtime":1666067916078,"results":"132","hashOfConfig":"85"},{"size":0,"mtime":1660020841918,"results":"133","hashOfConfig":"85"},{"size":2604,"mtime":1666067916110,"results":"134","hashOfConfig":"85"},{"size":81,"mtime":1666067916125,"results":"135","hashOfConfig":"85"},{"size":1271,"mtime":1666067916125,"results":"136","hashOfConfig":"85"},{"size":3730,"mtime":1666067916141,"results":"137","hashOfConfig":"85"},{"size":102,"mtime":1649902809914,"results":"138","hashOfConfig":"85"},{"size":4942,"mtime":1653449371236,"results":"139","hashOfConfig":"85"},{"size":49,"mtime":1666067916125,"results":"140","hashOfConfig":"85"},{"size":3050,"mtime":1666067916110,"results":"141","hashOfConfig":"85"},{"size":66,"mtime":1666067916094,"results":"142","hashOfConfig":"85"},{"size":6011,"mtime":1666067916094,"results":"143","hashOfConfig":"85"},{"size":2916,"mtime":1666067916094,"results":"144","hashOfConfig":"85"},{"size":374,"mtime":1666067916110,"results":"145","hashOfConfig":"85"},{"size":1146,"mtime":1666067916094,"results":"146","hashOfConfig":"85"},{"size":81,"mtime":1666067916094,"results":"147","hashOfConfig":"85"},{"size":5185,"mtime":1666067916094,"results":"148","hashOfConfig":"85"},{"size":2731,"mtime":1666067916094,"results":"149","hashOfConfig":"85"},{"size":62,"mtime":1666067916110,"results":"150","hashOfConfig":"85"},{"size":409,"mtime":1666067916110,"results":"151","hashOfConfig":"85"},{"size":76,"mtime":1666067916110,"results":"152","hashOfConfig":"85"},{"size":576,"mtime":1666067916110,"results":"153","hashOfConfig":"85"},{"size":1690,"mtime":1666067916060,"results":"154","hashOfConfig":"85"},{"size":66,"mtime":1666067916060,"results":"155","hashOfConfig":"85"},{"size":3700,"mtime":1666067916060,"results":"156","hashOfConfig":"85"},{"size":1474,"mtime":1666067916060,"results":"157","hashOfConfig":"85"},{"size":127,"mtime":1666067916141,"results":"158","hashOfConfig":"85"},{"size":63,"mtime":1666067916078,"results":"159","hashOfConfig":"85"},{"size":1518,"mtime":1666067916075,"results":"160","hashOfConfig":"85"},{"size":294,"mtime":1666067916110,"results":"161","hashOfConfig":"85"},{"size":51,"mtime":1666067916078,"results":"162","hashOfConfig":"85"},{"size":1223,"mtime":1666067916078,"results":"163","hashOfConfig":"85"},{"size":315,"mtime":1666067916078,"results":"164","hashOfConfig":"85"},{"size":102,"mtime":1666067916078,"results":"165","hashOfConfig":"85"},{"size":1149,"mtime":1666067916078,"results":"166","hashOfConfig":"85"},{"size":206,"mtime":1666067916078,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"1c8qxwu",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"170"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"282"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"170"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"170"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"170"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"C:\\Users\\disof\\scheduleit\\src\\index.js",[],["347","348"],"C:\\Users\\disof\\scheduleit\\src\\App.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\constants\\constants.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\SelectAvailability\\index.js",[],["349","350"],"C:\\Users\\disof\\scheduleit\\src\\pages\\SelectAvailability\\SelectAvailability.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\SelectAvailability\\requests.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Spinner\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Spinner\\Spinner.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\CreateRoom.jsx",["351"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  ButtonWithStatus,\r\n  Select,\r\n  Redirects\r\n} from 'ui-components'\r\nimport useForm from 'utils/hooks/useForm'\r\nimport {\r\n  TIME_IN_DAY_OPTIONS\r\n} from './utils/constants'\r\nimport {\r\n  convertEventTargetValueToInteger\r\n} from './utils/functions'\r\nimport { createEvent } from './requests'\r\nimport './CreateRoom.scss'\r\nimport DatePicker from './components/DatePicker'\r\nimport PagedForm from './components/PagedForm'\r\nimport {\r\n  VALID_TIMEZONES\r\n} from 'constants/constants'\r\n\r\nconst formInputs = [{ \r\n  name: 'earliestHourEventCanTakePlaceIn', \r\n}, {\r\n  name: 'latestHourEventCanTakePlaceIn',\r\n}, {\r\n  name: 'timeZone',\r\n  defaultValue: Intl.DateTimeFormat().resolvedOptions().timeZone\r\n}]\r\n\r\nconst CreateRoom = () => {\r\n  const [datesEventCanTakePlaceIn, setDatesEventCanTakePlaceIn] = useState([])\r\n  const [inputs, inputErrors, onInputChange, verifyInputs, setInputs] = useForm(formInputs)\r\n  const [eventId, setEventId] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (inputs.earliestHourEventCanTakePlaceIn >= inputs.latestHourEventCanTakePlaceIn) {\r\n      setInputs({ latestHourEventCanTakePlaceIn: undefined });\r\n    };\r\n  }, [inputs.earliestHourEventCanTakePlaceIn])\r\n\r\n  const onCreateRoomButtonClick = async () => {\r\n    const newEventId = await createEvent({\r\n      earliestHourEventCanTakePlaceIn: inputs.earliestHourEventCanTakePlaceIn,\r\n      latestHourEventCanTakePlaceIn: inputs.latestHourEventCanTakePlaceIn,\r\n      datesEventCanTakePlaceIn,\r\n      timeZone: inputs.timeZone\r\n    })\r\n    setEventId(newEventId)\r\n  }\r\n\r\n  return (\r\n    <Redirects to={`/event/${eventId}`} shouldRedirect={eventId}>\r\n      <div className='create-room-wrapper'>\r\n        <PageTitle />\r\n        <PagedForm \r\n          pages={[\r\n            {\r\n              message: \"What dates can your event take place at?\",\r\n              content: (\r\n                <DatePicker \r\n                  selectedDates={datesEventCanTakePlaceIn}\r\n                  onSelectedDatesChange={(newSelectedDates => setDatesEventCanTakePlaceIn(newSelectedDates))}\r\n                />\r\n              ),\r\n              shouldShowNextButton: datesEventCanTakePlaceIn.length > 0,\r\n              shouldAnimateNextButton: datesEventCanTakePlaceIn.length === 0\r\n            },\r\n            {\r\n              message: \"What's the earliest and latest time your event can take place at?\",\r\n              content: (\r\n                <>\r\n                  <Select\r\n                    label=\"Earliest time\"\r\n                    className=\"create-room-select\"\r\n                    onChange={onInputChange('earliestHourEventCanTakePlaceIn', convertEventTargetValueToInteger)} \r\n                    state={inputs.earliestHourEventCanTakePlaceIn} \r\n                    placeholder=\"Select a time\" \r\n                    options={TIME_IN_DAY_OPTIONS.slice(0, TIME_IN_DAY_OPTIONS.length - 1)} \r\n                    errorMessage={inputErrors.earliestHourEventCanTakePlaceIn}\r\n                  />\r\n                  <Select \r\n                    label=\"Latest time\"\r\n                    className=\"create-room-select\"\r\n                    onChange={onInputChange('latestHourEventCanTakePlaceIn', convertEventTargetValueToInteger)} \r\n                    state={inputs.latestHourEventCanTakePlaceIn} \r\n                    placeholder=\"Select a time\" \r\n                    options={TIME_IN_DAY_OPTIONS.slice(inputs.earliestHourEventCanTakePlaceIn + 1)}\r\n                    errorMessage={inputErrors.latestHourEventCanTakePlaceIn}\r\n                  />\r\n                  <Select\r\n                    label=\"Timezone\"\r\n                    className=\"create-room-select\"\r\n                    onChange={onInputChange('timeZone')}\r\n                    state={inputs.timeZone}\r\n                    options={VALID_TIMEZONES.map(({ label, tzCode }) => ({ value: tzCode, content: label }))}\r\n                  />\r\n                  <ButtonWithStatus \r\n                    buttonContent=\"Create event\"\r\n                    asyncAction={onCreateRoomButtonClick}\r\n                    verifier={verifyInputs}\r\n                    successMessage=\"Room was successfully created.\"\r\n                  />\r\n                </>\r\n              )     \r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n    </Redirects>\r\n  )\r\n};\r\n\r\nconst PageTitle = () => <div className=\"page-title\">Create Event</div>;\r\n\r\nexport default CreateRoom;","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Button\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Button\\Button.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Select\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Select\\Select.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\TextArea\\TextArea.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\utils\\hooks\\useObjectState.js",[],"C:\\Users\\disof\\scheduleit\\src\\utils\\hooks\\useForm.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\TextArea\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Message\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Message\\Message.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\requests.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\utils\\constants.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\utils\\functions.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\ButtonWithStatus\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\ButtonWithStatus\\ButtonWithStatus.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Loader\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Loader\\Loader.jsx",["352"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Spinner,\r\n  Message\r\n} from 'ui-components';\r\n\r\nconst Loader = ({ loadFunction, children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errorCaught, setErrorCaught] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setErrorCaught(false);\r\n    loadFunction().then(() => {\r\n      setIsLoading(false);\r\n    }).catch(error => {\r\n      console.log(error);\r\n      setErrorCaught(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? \r\n        <Spinner size='large'/>\r\n        : errorCaught ?\r\n          <Message content={'An error occurred'}/>\r\n          : children\r\n      }\r\n    </>\r\n  ); \r\n}\r\n\r\nexport default Loader;","C:\\Users\\disof\\scheduleit\\src\\pages\\RoomAdminDashboard\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\RoomAdminDashboard\\RoomAdminDashboard.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\CollapsibleCard\\index.js",[],["353","354"],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\CollapsibleCard\\CollapsibleCard.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\MultipleTextInput.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Input\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Input\\Input.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\utils\\functions.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\components\\UserList\\UserList.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\components\\CreateNewUser\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\MultipleTextInput\\components\\CreateNewUser\\CreateNewUser.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Label\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Label\\Label.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Redirects\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Redirects\\Redirects.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\RoomAdminDashboard\\requests.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\CollapsibleCard\\utils\\context\\collapsedContext.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\ParticipantDashboard.jsx",["355","356"],"import React, { useState } from 'react'\r\nimport './ParticipantDashboard.scss'\r\nimport {\r\n  convertTimesBasedOnTimeZone,\r\n  constructAvailabilityArrayFromAggregatedAvailabilities\r\n} from './utils/functions'\r\nimport {\r\n  Message,\r\n  Select,\r\n  CheckboxGroup,\r\n  Loader\r\n} from 'ui-components'\r\nimport TimePicker from './components/TimePicker'\r\nimport EventTimePicker from './components/EventTimePicker'\r\nimport {\r\n  VALID_TIMEZONES\r\n} from 'constants/constants'\r\nimport { useWidth } from './utils/hooks'\r\nimport { range } from 'utils/functions'\r\nimport { getEvent, updateParticipant } from './requests'\r\nimport { UI_ROOT_URL } from 'constants/constants'\r\n\r\nconst eventTimeZone = 'UTC'\r\n\r\nconst ParticipantDashboard = ({\r\n  loadedAggregatedAvailabilities,\r\n  loadedParticipants,\r\n  currentParticipant, \r\n  eventId \r\n}) => {\r\n  const [selectedTimeZone, setSelectedTimeZone] = useState(Intl.DateTimeFormat().resolvedOptions().timeZone)\r\n  const [aggregatedAvailabilities, setAggregatedAvailabilities] = useState(\r\n    convertTimesBasedOnTimeZone(loadedAggregatedAvailabilities, eventTimeZone, selectedTimeZone))\r\n  const [availability, setAvailability] = useState(\r\n    convertTimesBasedOnTimeZone(\r\n      constructAvailabilityArrayFromAggregatedAvailabilities(\r\n        loadedAggregatedAvailabilities, \r\n        currentParticipant),\r\n      eventTimeZone,\r\n      selectedTimeZone))\r\n  const [participantAvailabilityTableProps, setParticipantAvailabilityTableProps] = useState(null)\r\n  const [shouldShowModal, setShouldShowModal] = useState(false)\r\n  const [participants, setParticipants] = useState(loadedParticipants)\r\n  const [selectedParticipants, setSelectedParticipants] = useState(loadedParticipants)\r\n  const [shouldShowGroupAvailability, setShouldShowGroupAvailability] = useState(false)\r\n\r\n  const onTimeZoneChange = (targetTimeZone) => {\r\n    setSelectedTimeZone(targetTimeZone)\r\n    setAvailability(convertTimesBasedOnTimeZone(availability, selectedTimeZone, targetTimeZone))\r\n    setAggregatedAvailabilities(convertTimesBasedOnTimeZone(aggregatedAvailabilities, selectedTimeZone, targetTimeZone))\r\n  }\r\n\r\n  const onSelectedTimesChange = (newSelectedTimes) => {\r\n    setAvailability(newSelectedTimes)\r\n\r\n    const newAggregatedAvailabilities =\r\n      aggregatedAvailabilities.map(({ earlyTimeString, lateTimeString, participantsAvailable }, ind) => ({\r\n        earlyTimeString,\r\n        lateTimeString,\r\n        participantsAvailable:\r\n          newSelectedTimes[ind].isSelected ?\r\n            !participantsAvailable.includes(currentParticipant) ? [...participantsAvailable, currentParticipant] : [...participantsAvailable] :\r\n            participantsAvailable.includes(currentParticipant) ? participantsAvailable.filter(participant => participant !== currentParticipant) : [...participantsAvailable]\r\n    }))\r\n\r\n    setAggregatedAvailabilities(newAggregatedAvailabilities)\r\n\r\n    const newAvailability = newSelectedTimes.map(({ earlyTimeString, lateTimeString, isSelected }) => ({ earlyTimeString, lateTimeString, isAvailable: isSelected }))\r\n    updateParticipant(eventId, currentParticipant, newAvailability, selectedTimeZone)\r\n      .then(({ \r\n        aggregatedAvailabilities: loadedAggregatedAvailabilities,\r\n        participants: loadedParticipants\r\n       }) => {\r\n         setAggregatedAvailabilities(convertTimesBasedOnTimeZone(loadedAggregatedAvailabilities, eventTimeZone, selectedTimeZone))\r\n         setParticipants(loadedParticipants)\r\n       })\r\n  }\r\n\r\n  const width = useWidth()\r\n  const isSmallScreen = width < 500\r\n\r\n  return (\r\n    <>\r\n      {shouldShowModal && \r\n        <ParticipantDashboardModal \r\n          closeModal={() => setShouldShowModal(false)}\r\n          participants={participants}\r\n          selectedParticipants={selectedParticipants}\r\n          aggregatedAvailabilities={aggregatedAvailabilities}\r\n          setSelectedParticipants={setSelectedParticipants}  \r\n        />\r\n      }\r\n      <div className=\"page-title\">Select availability</div>\r\n      <div className=\"participant-dashboard-share\">{\"To share this event with someone direct them to: \"}\r\n        <a className=\"participang-dashboard-share-link\" href={`${UI_ROOT_URL}/event/${eventId}`}>{`${UI_ROOT_URL}/event/${eventId}`}</a>\r\n      </div>\r\n      <div className=\"participant-dashboard-wrapper\">\r\n        {(!isSmallScreen || !shouldShowGroupAvailability) && \r\n          <Select \r\n            label=\"Timezone\"\r\n            onChange={e => onTimeZoneChange(e.target.value) }\r\n            options={VALID_TIMEZONES.map(({ label, tzCode }) => ({ value: tzCode, content: label }))}\r\n            state={selectedTimeZone}\r\n            className=\"participant-dashboard-select\"\r\n          />}\r\n        <div></div>\r\n        {isSmallScreen ?\r\n          shouldShowGroupAvailability ?\r\n            <GroupAvailability\r\n              aggregatedAvailabilities={aggregatedAvailabilities}\r\n              setParticipantAvailabilityTableProps={setParticipantAvailabilityTableProps}\r\n              selectedParticipants={selectedParticipants}\r\n              selectedTimeZone={selectedTimeZone}\r\n              setShouldShowModal={setShouldShowModal}\r\n            /> :\r\n            <PersonalAvailability\r\n              availability={availability}\r\n              onSelectedTimesChange={onSelectedTimesChange}\r\n              selectedTimeZone={selectedTimeZone}\r\n            /> :\r\n          !participantAvailabilityTableProps ?\r\n            <PersonalAvailability\r\n              availability={availability}\r\n              onSelectedTimesChange={onSelectedTimesChange}\r\n              selectedTimeZone={selectedTimeZone}\r\n            />\r\n            :\r\n            <ParticipantAvailabilityTable\r\n              participants={selectedParticipants}\r\n              {...participantAvailabilityTableProps}\r\n            />\r\n        }\r\n        {!isSmallScreen &&\r\n          <GroupAvailability\r\n            aggregatedAvailabilities={aggregatedAvailabilities}\r\n            setParticipantAvailabilityTableProps={setParticipantAvailabilityTableProps}\r\n            selectedParticipants={selectedParticipants}\r\n            selectedTimeZone={selectedTimeZone}\r\n            setShouldShowModal={setShouldShowModal}\r\n          />\r\n        }\r\n        {isSmallScreen &&\r\n          <div className=\"participant-dashboard-link-wrapper\">\r\n            <div className=\"participant-dashboard-link\" onClick={() => setShouldShowGroupAvailability(!shouldShowGroupAvailability)}>{shouldShowGroupAvailability ? \"See my availability\" : \"See group availability\"}</div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst GroupAvailability = ({\r\n  aggregatedAvailabilities,\r\n  setParticipantAvailabilityTableProps,\r\n  selectedParticipants,\r\n  selectedTimeZone,\r\n  setShouldShowModal\r\n}) => \r\n  <div className=\"group-availability-wrapper\">\r\n    <div className=\"dashboard-text\">\r\n      <Message>Group's availability</Message>\r\n    </div>\r\n    <EventTimePicker\r\n      aggregatedAvailabilities={aggregatedAvailabilities}\r\n      onTimeTickEnter={(earlyTime, lateTime, participantsAvailable) => setParticipantAvailabilityTableProps({ earlyTime, lateTime, participantsAvailable })}\r\n      onTimeTickLeave={() => setParticipantAvailabilityTableProps(null)}\r\n      participants={selectedParticipants}\r\n      timeZone={selectedTimeZone}\r\n    />\r\n    <p className=\"participant-modal-link\" onClick={() => setShouldShowModal(true)}>Manage participants</p>\r\n  </div>\r\n\r\nconst PersonalAvailability = ({\r\n  availability,\r\n  onSelectedTimesChange,\r\n  selectedTimeZone\r\n}) =>\r\n  <div>\r\n    <div className=\"dashboard-text\">\r\n      <Message>Your availability</Message>\r\n    </div>\r\n    <TimePicker \r\n      selectedTimes={availability}\r\n      onSelectedTimesChange={newSelectedTimes => onSelectedTimesChange(newSelectedTimes)}\r\n      timeZone={selectedTimeZone}\r\n    />\r\n  </div>\r\n\r\nconst ParticipantAvailabilityTable = ({\r\n  participants,\r\n  participantsAvailable,\r\n  earlyTime,\r\n  lateTime\r\n}) => {\r\n  const participantsNotAvailable = participants.filter(participant => !participantsAvailable.includes(participant))\r\n  const numRows = Math.max(participantsAvailable.length, participantsNotAvailable.length)\r\n  const isRightHeavy = participantsAvailable.length >= participantsNotAvailable.length\r\n\r\n  const tdClass = isRightHeavy ? 'pat-body-right' : 'pat-body-left'\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dashboard-text\">\r\n        <Message>Availability from {earlyTime} to {lateTime}</Message>\r\n      </div>\r\n      <table className='participant-availability-table'>\r\n        <thead>\r\n          <tr>\r\n            <th className='pat-header'>Available</th>\r\n            <th className='pat-header'>Not available</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {range(numRows).map(ind => (\r\n            <tr>\r\n              <td className={tdClass}>{ind < participantsAvailable.length ? participantsAvailable[ind] : null}</td>\r\n              <td className={tdClass}>{ind < participantsNotAvailable.length ? participantsNotAvailable[ind] : null}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ParticipantDashboardModal = ({ participants, closeModal, selectedParticipants, setSelectedParticipants, aggregatedAvailabilities }) => {\r\n  const sortedParticipantsWithAvailabilities = sortParticipantsBasedOnAvailability(participants, aggregatedAvailabilities)\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close-button\" onClick={() => closeModal()}>&times;</span>\r\n        <div className=\"modal-text\">\r\n          <Message>Selected participants</Message>\r\n          <div className=\"participants-checkbox-wrapper\">\r\n            <CheckboxGroup\r\n              labels={sortedParticipantsWithAvailabilities.map(({ participant, availabilityScore }) => `${participant} - available at ${availabilityScore} times`)}\r\n              values={sortedParticipantsWithAvailabilities.map(({ participant }) => participant)}\r\n              selected={selectedParticipants}\r\n              onSelectedChange={newSelectedParticipants => setSelectedParticipants(newSelectedParticipants)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst sortParticipantsBasedOnAvailability = (participants, aggregatedAvailabilities) =>\r\n  participants\r\n  .map(participant => ({ participant, availabilityScore: countParticipantAvailability(participant, aggregatedAvailabilities) }))\r\n  .sort((a, b) => b.availabilityScore - a.availabilityScore)\r\n\r\nconst countParticipantAvailability = (participant, aggregatedAvailabilities) =>\r\n  aggregatedAvailabilities.reduce((availabilityScore, { participantsAvailable }) => availabilityScore + participantsAvailable.filter(x => x === participant).length, 0)\r\n\r\nexport default ParticipantDashboard","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\utils\\constants.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\utils\\functions.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\HorizontalPager\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\HorizontalPager\\HorizontalPager.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\utils\\constructors\\constructTime.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\CompactEventTimePicker\\index.js",[],["357","358"],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\CompactEventTimePicker\\CompactEventTimePicker.jsx",["359","360","361","362","363"],"import React, {useState} from 'react'\r\nimport { MINUTE_GRANULARITY } from \"ui-components/TimePicker2/constants\"\r\nimport { constructTime, constructTimeFromString } from 'utils/constructors/constructTime'\r\nimport { HorizontalPager, Message } from 'ui-components'\r\nimport './CompactEventTimePicker.scss'\r\n\r\nimport './CompactEventTimePicker.scss'\r\n\r\nconst CompactEventTimePicker = ({\r\n  aggregatedAvailabilities, \r\n  eventDuration, \r\n  timeZone\r\n}) => {\r\n  const dates = Object.keys(aggregatedAvailabilities)\r\n  const [selectedDate, setSelectedDate] = useState(dates[0])\r\n\r\n  const compactEventTimes = parseAggregatedAvailabilities(aggregatedAvailabilities, eventDuration, timeZone)\r\n  if (!compactEventTimes[selectedDate]) {\r\n    setSelectedDate(dates[0])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HorizontalPager maxNumElementsInPage={1} onPageChange={(page) => setSelectedDate(dates[page])}>\r\n        {dates.map((date, ind) => <Message key={ind} className = \"compact-event-time-picker-text\">{date}</Message>)}\r\n      </HorizontalPager>\r\n      <HorizontalPager maxNumElementsInPage={1}>\r\n        {compactEventTimes[selectedDate].map((availableTime, ind) => <Message key={ind} className = \"compact-event-time-picker-text\">{availableTime}</Message>)}\r\n      </HorizontalPager>\r\n    </>\r\n  )\r\n}\r\n\r\nconst constructAggregatedAvailabilitiesObject = (\r\n  earliestHour,\r\n  latestHour,\r\n  dates,\r\n  timeZone\r\n) => dates.reduce((availabilityObject, date) => {\r\n  const availabilityInDayObject = constructTime(earliestHour, 0, date, timeZone, false).addMinutes(MINUTE_GRANULARITY).getListOfTimesTo(constructTime(latestHour, 0, date, timeZone, false, latestHour === 24), MINUTE_GRANULARITY).reduce(\r\n    (obj, time) => {\r\n      obj[time.toStringMilitaryForm()] = [true, false][Math.floor(Math.random() * 2)]\r\n\r\n      return obj\r\n    }, {});\r\n\r\n  availabilityObject[date] = { ...availabilityInDayObject }\r\n\r\n  return availabilityObject\r\n}, {})\r\n\r\nconst summarizeAggregatedAvailabilities = (aggregatedAvailabilities, participants) => \r\n  shallowObjectMap(\r\n    aggregatedAvailabilities,\r\n    aggregatedAvailabilitiesInDay => shallowObjectMap(\r\n      aggregatedAvailabilitiesInDay,\r\n      participantsAvailableAtTime => participantsAvailableAtTime.length === participants.length\r\n    )\r\n  )\r\n\r\nconst shallowObjectMap = (obj, mapFunc) => Object.fromEntries(\r\n  Object.keys(obj).map(key => [key, mapFunc(obj[key])])\r\n)\r\n\r\nconst parseAggregatedAvailabilities = (aggregatedAvailabilities, eventDuration, timeZone) =>\r\n  Object.keys(aggregatedAvailabilities).reduce((compactTimesWhenParticipantsCanMeet, date) => ({\r\n    ...compactTimesWhenParticipantsCanMeet,\r\n    [date]:\r\n      Object.keys(aggregatedAvailabilities[date])\r\n        .reduce(\r\n          ({ listOfConsecutiveTimes, previousTime, previouslyAvailable }, time) => {\r\n            const areAllParticipantsAvailable = aggregatedAvailabilities[date][time]\r\n\r\n            if (areAllParticipantsAvailable && (!previouslyAvailable || constructTimeFromString(previousTime, date, timeZone).getNextTimeString(MINUTE_GRANULARITY) != time)) {\r\n              listOfConsecutiveTimes.push([])\r\n            }\r\n\r\n            if (areAllParticipantsAvailable) {\r\n              listOfConsecutiveTimes[listOfConsecutiveTimes.length - 1].push(time)\r\n            }\r\n\r\n            previousTime = time\r\n            previouslyAvailable = areAllParticipantsAvailable\r\n            \r\n            return { listOfConsecutiveTimes, previousTime, previouslyAvailable }\r\n          },\r\n          { listOfConsecutiveTimes: [], previousTime: null }\r\n        )\r\n        .listOfConsecutiveTimes\r\n        .reduce(\r\n          (compactTimesWhenParticipantsCanMeetInDay, consecutiveTimes) => {\r\n            if (eventDuration % MINUTE_GRANULARITY != 0) {\r\n              throw new Error(`${eventDuration} is not a multiple of ${MINUTE_GRANULARITY}`)\r\n            }\r\n\r\n            const numTimesParticipantsCanMeetIn = consecutiveTimes.length - ((eventDuration / MINUTE_GRANULARITY) - 1)\r\n\r\n            if (numTimesParticipantsCanMeetIn > 0) {\r\n              for (let i = 0; i < numTimesParticipantsCanMeetIn; i++) {\r\n                const startTime = constructTimeFromString(consecutiveTimes[i], date, timeZone).addMinutes(-MINUTE_GRANULARITY).toString()\r\n                const endTime = constructTimeFromString(consecutiveTimes[i + ((eventDuration / MINUTE_GRANULARITY) - 1)], date, timeZone).toString()\r\n                compactTimesWhenParticipantsCanMeetInDay.push(`${startTime} - ${endTime}`)\r\n              }\r\n            }\r\n\r\n            return compactTimesWhenParticipantsCanMeetInDay\r\n          },\r\n          []\r\n        )\r\n  }), {})\r\n\r\nconst printListOfConsecutiveTimes = (listOfConsecutiveTimes) => {\r\n  let result = ''\r\n\r\n  listOfConsecutiveTimes.forEach(consecutiveTimes => {\r\n    consecutiveTimes.forEach(time => {\r\n      result += time + ','\r\n    })\r\n\r\n    result += '|'\r\n  })\r\n\r\n  return result\r\n}\r\n\r\nexport default CompactEventTimePicker","C:\\Users\\disof\\scheduleit\\src\\ui-components\\Grid\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Grid\\Grid.jsx",["364"],"import react from \"react\";\r\nimport \"./Grid.scss\";\r\nimport { HorizontalPager } from \"ui-components\";\r\n\r\nexport const GridDirections = {\r\n  Column: 'column',\r\n  Row: 'row'\r\n}\r\n\r\nconst Grid = ({\r\n  style,\r\n  Cell,\r\n  cellProps,\r\n  Header,\r\n  headerProps,\r\n  scrollAndHeaderWrapperClass,\r\n  cellContainerClass,\r\n  maxNumOfElementsInPage\r\n}) => {\r\n  const { direction, paged, headerDirection } = style\r\n\r\n  const getHeaderRowOrColumnIfNeeded = () => \r\n    direction === headerDirection ?\r\n      [<RowOrColumn \r\n        key={0}\r\n        style={style}\r\n        scrollAndHeaderWrapperClass={scrollAndHeaderWrapperClass} \r\n        cellContainerClass={cellContainerClass}\r\n       >{headerProps.map((headerProp, ind) => <Header {...headerProp} />)}</RowOrColumn> ] :\r\n      []\r\n\r\n  return (\r\n    <PagedWrapper paged={paged} maxNumOfElementsInPage={maxNumOfElementsInPage} direction={direction}>\r\n      {getHeaderRowOrColumnIfNeeded().concat(cellProps.map(\r\n        (cellPropRowOrColumn, ind) => \r\n          <RowOrColumn\r\n            key={ind + 1}\r\n            style={style}\r\n            scrollAndHeaderWrapperClass={scrollAndHeaderWrapperClass}\r\n            cellContainerClass={cellContainerClass}\r\n            Header={direction !== headerDirection ? Header : null}\r\n            headerProps = {direction !== headerDirection ? headerProps[ind] : null}\r\n          >\r\n            {cellPropRowOrColumn.map(\r\n              (cellProp, innerInd) => <Cell key={innerInd + 1} {...cellProp}></Cell>\r\n            )}\r\n          </RowOrColumn>\r\n      ))}\r\n    </PagedWrapper>\r\n  )\r\n}\r\n\r\nconst PagedWrapper = ({\r\n  children,\r\n  direction,\r\n  paged,\r\n  maxNumOfElementsInPage\r\n}) => \r\n  paged ? \r\n    <HorizontalPager maxNumOfElementsInPage={maxNumOfElementsInPage}>{children}</HorizontalPager> :\r\n    <div className={getPagedWrapperDivClassName(direction)}>{children}</div>\r\n\r\nconst getPagedWrapperDivClassName = (direction) => {\r\n  const classes = ['paged-wrapper-div']\r\n\r\n  direction === GridDirections.Row && classes.push('flex-column')\r\n\r\n  return classes.join(' ')\r\n}\r\n\r\nconst RowOrColumn = ({\r\n  children,\r\n  style: { direction, scrollable, headerScrollable },\r\n  scrollAndHeaderWrapperClass,\r\n  cellContainerClass,\r\n  Header,\r\n  headerProps\r\n}) => {\r\n  const getScrollAndHeaderWrapperClasses = () => {\r\n    const classes = [scrollAndHeaderWrapperClass, 'flex']\r\n\r\n    direction === GridDirections.Column && classes.push('flex-column')\r\n\r\n    return classes.join(' ')\r\n  }\r\n\r\n  const getCellContainerClasses = () => {\r\n    const classes = [cellContainerClass, 'flex']\r\n\r\n    direction === GridDirections.Column && classes.push('flex-column')\r\n    scrollable && classes.push('scrollable')\r\n\r\n    return classes.join(' ')\r\n  }\r\n\r\n  return (\r\n    <div className={getScrollAndHeaderWrapperClasses()}>\r\n      {!headerScrollable && Header && <Header {...headerProps} />}\r\n      <div className={getCellContainerClasses()}>\r\n        {headerScrollable && Header && <Header key={0} {...headerProps} />}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\TimePicker\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\TimePicker\\TimePicker.jsx",["365","366"],"import react, { useState } from \"react\"\r\nimport { DateTime } from \"luxon\"\r\nimport \"../shared/TimePicker.scss\"\r\nimport { Grid } from \"ui-components\"\r\nimport TimeTick, { TimeTickType } from \"./TimeTick\"\r\nimport { \r\n  constructTimeFromString, \r\n  determineEarlierAndLaterTime,\r\n  haveDifferentDates\r\n} from \"utils/constructors/constructTime\"\r\nimport { useWidth } from \"../../utils/hooks\"\r\nimport {\r\n  MINUTE_GRANULARITY,\r\n  TimePickerGridStyle,\r\n  groupBy,\r\n  Header\r\n} from \"../shared/shared\"\r\n\r\nconst TimePicker = ({\r\n  selectedTimes,\r\n  onSelectedTimesChange,\r\n  timeZone\r\n}) => {\r\n  const [clickedTime, setClickedTime] = useState()\r\n  const width = useWidth()\r\n\r\n  const [dates, selectedTimesGroupedByDate] = groupBy(selectedTimes, ({ earlyTimeString }) => constructTimeFromString(earlyTimeString, timeZone).toDate())\r\n\r\n  const headerProps = dates.map(date => ({ dateObj: DateTime.fromFormat(date, 'DD')}))\r\n\r\n  const onTimeTickClick = (timeString) => {\r\n    if(clickedTime) {\r\n      if (haveDifferentDates(clickedTime, timeString)) {\r\n        setClickedTime(timeString)\r\n        return\r\n      }\r\n      toggleSelectedTimes(clickedTime, timeString)\r\n      setClickedTime(undefined)\r\n    } else {\r\n      setClickedTime(timeString)\r\n    }\r\n  }\r\n\r\n  const toggleSelectedTimes = (firstTime, secondTime) => {\r\n    const [startTime, endTime] = determineEarlierAndLaterTime(firstTime, secondTime, timeZone)\r\n\r\n    let isEarliestTimeFound = false\r\n    let isLatestTimeFound = false\r\n    const newSelectedTimes = selectedTimes.map(({ earlyTimeString, lateTimeString, isSelected }) => {\r\n      const rc = { earlyTimeString, lateTimeString, isSelected } \r\n\r\n      if (earlyTimeString === startTime) {\r\n        isEarliestTimeFound = true\r\n      }\r\n\r\n      if (isEarliestTimeFound && !isLatestTimeFound) {\r\n        rc.isSelected = !rc.isSelected\r\n      }\r\n\r\n      if (lateTimeString === endTime) {\r\n        isLatestTimeFound = true\r\n      }\r\n\r\n      return rc\r\n    })\r\n\r\n    onSelectedTimesChange(newSelectedTimes)\r\n  }\r\n\r\n  const timeTickProps = selectedTimesGroupedByDate.map(\r\n    (selectedTimesInDate, dateInd) => selectedTimesInDate.reduce(\r\n      (timeTickPropsInDate, { earlyTimeString, lateTimeString, isSelected }, ind) => {\r\n        let selectedTimesIndOffset = 0\r\n        for (let i = 0; i < dateInd; i++) {\r\n          selectedTimesIndOffset += selectedTimesGroupedByDate[i].length\r\n        }\r\n\r\n        const time = constructTimeFromString(lateTimeString, timeZone)\r\n\r\n        const rc = [...timeTickPropsInDate]\r\n\r\n        // We should add a separator between TimeTicks if current time and previous time are not consecutive\r\n        const shouldAddSeparator = ind !== 0 && earlyTimeString !== selectedTimesInDate[ind - 1].lateTimeString\r\n        if (shouldAddSeparator) {\r\n          rc.push({\r\n            timeString: null,\r\n            hourString: null,\r\n            type: TimeTickType.SEPARATOR,\r\n            isSelected: false,\r\n            isFirstSelectedTimeForTimeRangeSwitch: false,\r\n            isFirstOrLastTimeInTimeRange: false,\r\n            onClick: () => {}\r\n          })\r\n        }\r\n\r\n        const selectedTimesInd = selectedTimesIndOffset + ind\r\n\r\n        // We want to add an offset TimeTick to be able to select the first possible time range in a day,\r\n        // or the first time range after a separator. For example, if the earliest time range we want the user\r\n        // to be able to select is 9:00 AM - 9:15 AM, then we need to pick one of the times to represent the time range\r\n        // in selectedTimes. In our case we choose 9:15 AM, the latest time, but since in the UI we select time range\r\n        // availability by clicking on one TimeTick and then another indicating that we're available during all of the times \r\n        // in between non-inclusive of the earliest time we selected, if the earliest time we can select is 9:15 AM,\r\n        // then there's no way to indicate that the user is available 9:00 AM - 9:15 AM, so we need a 9:00 AM offset\r\n        // TimeTick.\r\n        if (ind === 0 || shouldAddSeparator) {\r\n          const offsetTime = constructTimeFromString(earlyTimeString, timeZone)\r\n          rc.push({\r\n            timeString: offsetTime.toString(),\r\n            hourString: offsetTime.toStringWithoutMinutes(),\r\n            type: TimeTickType.OFFSET,\r\n            isSelected: false,\r\n            isFirstSelectedTimeForTimeRangeSwitch: offsetTime.toStringWithDate() === clickedTime,\r\n            isFirstOrLastTimeInTimeRange: selectedTimesInDate[ind].isSelected && !(selectedTimesInd !== 0 && selectedTimes[selectedTimesInd - 1].lateTimeString === earlyTimeString && selectedTimes[selectedTimesInd - 1].isSelected),\r\n            onClick: () => onTimeTickClick(offsetTime.toStringWithDate())\r\n          })\r\n        }\r\n\r\n        const isConsecutiveToNextTime = selectedTimesInd !== selectedTimes.length - 1 && lateTimeString === selectedTimes[selectedTimesInd + 1].earlyTimeString\r\n        rc.push({\r\n          timeString: time.toString(),\r\n          hourString: time.toStringWithoutMinutes(),\r\n          type: time.isHour() ? TimeTickType.HOUR : TimeTickType.REGULAR,\r\n          isSelected: isSelected,\r\n          isFirstSelectedTimeForTimeRangeSwitch: time.toStringWithDate() === clickedTime,\r\n          isFirstOrLastTimeInTimeRange: (!isSelected && isConsecutiveToNextTime && selectedTimes[selectedTimesInd + 1].isSelected) || (isSelected && (!isConsecutiveToNextTime || !selectedTimes[selectedTimesInd + 1].isSelected)),\r\n          onClick: () => onTimeTickClick(time.toStringWithDate())\r\n        })\r\n\r\n        return rc\r\n      },\r\n      []\r\n    )\r\n  )\r\n\r\n  const maxDaysInAPage = width < 1000 ? 2 : 3\r\n\r\n  return (\r\n    <Grid\r\n      style={TimePickerGridStyle}\r\n      Cell={TimeTick}\r\n      cellProps={timeTickProps}\r\n      Header={Header}\r\n      headerProps={headerProps}\r\n      scrollAndHeaderWrapperClass=\"day\"\r\n      cellContainerClass=\"time-tick-container\"\r\n      maxNumOfElementsInPage={maxDaysInAPage}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TimePicker","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\TimePicker\\TimeTick.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\utils\\hooks.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\shared\\shared.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\EventTimePicker\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\EventTimePicker\\EventTimePicker.jsx",["367"],"import { DateTime } from \"luxon\"\r\nimport \"../shared/TimePicker.scss\"\r\nimport { Grid } from \"ui-components\"\r\nimport EventTimeTick, { EventTimeTickType } from \"./EventTimeTick\"\r\nimport { constructTimeFromString } from \"utils/constructors/constructTime\"\r\nimport { useWidth } from \"../../utils/hooks\"\r\nimport {\r\n  TimePickerGridStyle,\r\n  groupBy,\r\n  Header\r\n} from \"../shared/shared\"\r\n\r\nconst COLOR_SCALE = 3\r\n\r\nconst EventTimePicker = ({\r\n  aggregatedAvailabilities,\r\n  onTimeTickEnter,\r\n  onTimeTickLeave,\r\n  participants,\r\n  timeZone\r\n}) => {\r\n  const width = useWidth()\r\n\r\n  const parsedAggregatedAvailabilities = aggregatedAvailabilities.map(aggregatedAvailability => ({\r\n    ...aggregatedAvailability,\r\n    participantsAvailable: aggregatedAvailability.participantsAvailable.filter(participant => participants.includes(participant))\r\n  }))\r\n\r\n  const eventTimeTickProps = parsedAggregatedAvailabilities.reduce(\r\n    (eventTimeTickProps, {\r\n      earlyTimeString,\r\n      lateTimeString,\r\n      participantsAvailable\r\n    }, ind) => {\r\n      const time = constructTimeFromString(lateTimeString, timeZone)\r\n\r\n      const isDifferentDate = ind !== 0 && constructTimeFromString(earlyTimeString, timeZone).toDate() !== constructTimeFromString(parsedAggregatedAvailabilities[ind - 1].earlyTimeString, timeZone).toDate()\r\n      if (isDifferentDate) {\r\n        eventTimeTickProps.push([])\r\n      }\r\n\r\n      const isNotConsecutiveToLastTime = ind !== 0 && earlyTimeString !== parsedAggregatedAvailabilities[ind - 1].lateTimeString\r\n      if (!isDifferentDate && isNotConsecutiveToLastTime) {\r\n        eventTimeTickProps[eventTimeTickProps.length - 1].push({\r\n          timeString: null,\r\n          hourString: null,\r\n          type: EventTimeTickType.SEPARATOR,\r\n          isFirstOrLastTimeInTimeRange: false,\r\n        })\r\n      }\r\n\r\n      const hasAvailableParticipant = participantsAvailable.length > 0\r\n\r\n      if (ind === 0 || isDifferentDate || isNotConsecutiveToLastTime) {\r\n        const offsetTime = constructTimeFromString(earlyTimeString, timeZone)\r\n        eventTimeTickProps[eventTimeTickProps.length - 1].push({\r\n          timeString: offsetTime.toString(),\r\n          hourString: offsetTime.toStringWithoutMinutes(),\r\n          type: EventTimeTickType.OFFSET,\r\n          isFirstOrLastTimeInTimeRange: hasAvailableParticipant\r\n        })\r\n      }\r\n\r\n      const isConsecutiveToNextTime = ind !== parsedAggregatedAvailabilities.length - 1 && lateTimeString === parsedAggregatedAvailabilities[ind + 1].earlyTimeString\r\n\r\n      eventTimeTickProps[eventTimeTickProps.length - 1].push({\r\n        timeString: time.toString(),\r\n        hourString: time.toStringWithoutMinutes(),\r\n        type: time.isHour() ? EventTimeTickType.HOUR : EventTimeTickType.REGULAR,\r\n        availabilityGroup: mapToScale(participantsAvailable.length, participants.length, Math.min(participants.length, COLOR_SCALE)),\r\n        isFirstOrLastTimeInTimeRange: (!hasAvailableParticipant && isConsecutiveToNextTime && parsedAggregatedAvailabilities[ind + 1].participantsAvailable.length > 0) || (hasAvailableParticipant && (!isConsecutiveToNextTime || parsedAggregatedAvailabilities[ind + 1].participantsAvailable.length === 0)),\r\n        onMouseEnter: () => onTimeTickEnter(constructTimeFromString(earlyTimeString, timeZone).toString(), time.toString(), participantsAvailable),\r\n        onMouseLeave: () => onTimeTickLeave()\r\n      })\r\n\r\n      return eventTimeTickProps\r\n    },\r\n    [[]]\r\n  )\r\n\r\n  const [dates] = groupBy(parsedAggregatedAvailabilities, ({ earlyTimeString }) => constructTimeFromString(earlyTimeString, timeZone).toDate())\r\n\r\n  const headerProps = dates.map(date => ({ dateObj: DateTime.fromFormat(date, 'DD')}))\r\n\r\n  const maxDaysInAPage = width < 1000 ? 2 : 3\r\n\r\n  return (\r\n    <div className=\"group-availability-and-gradient-wrapper\">\r\n      <Grid\r\n        style={TimePickerGridStyle}\r\n        Cell={EventTimeTick}\r\n        cellProps={eventTimeTickProps}\r\n        Header={Header}\r\n        headerProps={headerProps}\r\n        scrollAndHeaderWrapperClass=\"day\"\r\n        cellContainerClass=\"time-tick-container\"\r\n        maxNumOfElementsInPage={maxDaysInAPage}\r\n      />\r\n      <ScaleGradient numParticipants={participants.length} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ScaleGradient = ({\r\n  numParticipants\r\n}) => {\r\n  const numColors = Math.min(numParticipants, COLOR_SCALE)\r\n\r\n  const gradientScales = [0]\r\n  let lastScale = 0\r\n  for (let i = 0; i <= numParticipants; i++) {\r\n    const newScale = mapToScale(i, numParticipants, numColors)\r\n    if (newScale != lastScale) {\r\n      lastScale = newScale\r\n      gradientScales.push(i)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"gradient-and-text-wrapper\">\r\n      <div className=\"gradient-text-left\">{`0/${numParticipants} available`}</div>\r\n      <div className=\"gradient\">\r\n        {gradientScales.map((scale, ind) =>\r\n          <div className={`gradient-${ind}`}></div>)}\r\n      </div>\r\n      <div className=\"gradient-text-right\">{`${numParticipants}/${numParticipants} available`}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapToScale = (num, fromScale, toScale) => {\r\n  return Math.round((num / fromScale) * toScale)\r\n}\r\n\r\nexport default EventTimePicker","C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\components\\EventTimePicker\\EventTimeTick.jsx",[],["368","369"],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Checkbox\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\Checkbox\\Checkbox.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\CheckboxGroup\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\ui-components\\CheckboxGroup\\CheckboxGroup.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\Date.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\DatePicker.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\DatePicker\\functions.js",[],"C:\\Users\\disof\\scheduleit\\src\\utils\\functions.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\PagedForm\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\CreateRoom\\components\\PagedForm\\PagedForm.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\ParticipantDashboard\\requests.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\Login\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\Login\\Login.jsx",["370"],"import React, { useState } from 'react'\r\nimport './Login.scss'\r\nimport { Input, ButtonWithStatus } from 'ui-components'\r\nimport useForm from 'utils/hooks/useForm'\r\nimport { createParticipant } from './requests'\r\n\r\nconst formInputs = [{ \r\n  name: 'username', \r\n}]\r\n\r\nconst Login = ({ setCurrentParticipant, eventId, loadEventData }) => {\r\n  const [inputs, inputErrors, onInputChange, verifyInputs] = useForm(formInputs)\r\n\r\n  const onLoginButtonClick = async () => {\r\n    const username = inputs.username\r\n    await createParticipant(eventId, username)\r\n    setCurrentParticipant(username)\r\n    await loadEventData()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-title\">Login to event</div>\r\n      <div className=\"input-container\">\r\n        <Input \r\n          label=\"Username\" \r\n          value={inputs.username}\r\n          onChange={onInputChange('username', e => e.target.value)}\r\n          errorMessage={inputErrors.username}\r\n        />\r\n      </div>\r\n      <div className=\"login-button-container\">\r\n        <ButtonWithStatus \r\n          buttonContent=\"Login\"\r\n          asyncAction={onLoginButtonClick}\r\n          verifier={verifyInputs}\r\n        />\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Login","C:\\Users\\disof\\scheduleit\\src\\pages\\Login\\requests.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\LoginAndDashboardEntry\\index.js",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\LoginAndDashboardEntry\\LoginAndDashboardEntry.jsx",[],"C:\\Users\\disof\\scheduleit\\src\\pages\\LoginAndDashboardEntry\\requests.js",[],{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"371","replacedBy":"375"},{"ruleId":"373","replacedBy":"376"},{"ruleId":"377","severity":1,"message":"378","line":40,"column":6,"nodeType":"379","endLine":40,"endColumn":46,"suggestions":"380"},{"ruleId":"377","severity":1,"message":"381","line":20,"column":6,"nodeType":"379","endLine":20,"endColumn":8,"suggestions":"382"},{"ruleId":"371","replacedBy":"383"},{"ruleId":"373","replacedBy":"384"},{"ruleId":"385","severity":1,"message":"386","line":11,"column":3,"nodeType":"387","messageId":"388","endLine":11,"endColumn":9},{"ruleId":"385","severity":1,"message":"389","line":20,"column":10,"nodeType":"387","messageId":"388","endLine":20,"endColumn":18},{"ruleId":"371","replacedBy":"390"},{"ruleId":"373","replacedBy":"391"},{"ruleId":"385","severity":1,"message":"392","line":34,"column":7,"nodeType":"387","messageId":"388","endLine":34,"endColumn":46},{"ruleId":"385","severity":1,"message":"393","line":52,"column":7,"nodeType":"387","messageId":"388","endLine":52,"endColumn":40},{"ruleId":"394","severity":1,"message":"395","line":74,"column":165,"nodeType":"396","messageId":"397","endLine":74,"endColumn":167},{"ruleId":"394","severity":1,"message":"395","line":92,"column":52,"nodeType":"396","messageId":"397","endLine":92,"endColumn":54},{"ruleId":"385","severity":1,"message":"398","line":112,"column":7,"nodeType":"387","messageId":"388","endLine":112,"endColumn":34},{"ruleId":"385","severity":1,"message":"399","line":1,"column":8,"nodeType":"387","messageId":"388","endLine":1,"endColumn":13},{"ruleId":"385","severity":1,"message":"399","line":1,"column":8,"nodeType":"387","messageId":"388","endLine":1,"endColumn":13},{"ruleId":"385","severity":1,"message":"400","line":13,"column":3,"nodeType":"387","messageId":"388","endLine":13,"endColumn":21},{"ruleId":"394","severity":1,"message":"395","line":113,"column":18,"nodeType":"396","messageId":"397","endLine":113,"endColumn":20},{"ruleId":"371","replacedBy":"401"},{"ruleId":"373","replacedBy":"402"},{"ruleId":"385","severity":1,"message":"403","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":25},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],["404"],["405"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'inputs.latestHourEventCanTakePlaceIn' and 'setInputs'. Either include them or remove the dependency array.","ArrayExpression",["406"],"React Hook useEffect has a missing dependency: 'loadFunction'. Either include it or remove the dependency array. If 'loadFunction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["407"],["404"],["405"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'getEvent' is defined but never used.",["404"],["405"],"'constructAggregatedAvailabilitiesObject' is assigned a value but never used.","'summarizeAggregatedAvailabilities' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'printListOfConsecutiveTimes' is assigned a value but never used.","'react' is defined but never used.","'MINUTE_GRANULARITY' is defined but never used.",["404"],["405"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},"Update the dependencies array to be: [inputs.earliestHourEventCanTakePlaceIn, inputs.latestHourEventCanTakePlaceIn, setInputs]",{"range":"412","text":"413"},"Update the dependencies array to be: [loadFunction]",{"range":"414","text":"415"},[1192,1232],"[inputs.earliestHourEventCanTakePlaceIn, inputs.latestHourEventCanTakePlaceIn, setInputs]",[506,508],"[loadFunction]"]